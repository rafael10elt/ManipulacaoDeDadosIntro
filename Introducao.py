# -*- coding: utf-8 -*-
"""Overview of Colaboratory Features

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/notebooks/basic_features_overview.ipynb
"""

# Commented out IPython magic to ensure Python compatibility.
# #Automatizando o processo de gravação
# fileName = input("Digite o nome do arquivo: ") #Abre a caixa de diálogo para o usuário digitar
# fileName = fileName + ".txt" #Inclui a extensão .txt ao nome do arquivo digitado
# arq1 = open(fileName,'w')#Abre o arquivo em modo de escrita 'w'
# arq1.write("Incluindo texto no arquivo criado")#Escreve a alteração
# arq1.close()#Fecha o arquivo
# arq1 = open(fileName,"r")#Abre o arquivo em modo de leitura 'r'
# print(arq1.read())#Imprime o conteudo do arquivo
# arq1.close()#Fecha o arquivo
# 
# #Usando as funções built-in do Python
# #Abrindo um dataset em uma unica linha
# f = open("arquivos/salarios.csv","r")#Abre o arquivo em modo de leitura 'r'
# data = f.read()#Atribui a variável "data" a leitura do arquivo
# rows = data.split('\n')#Atribui ao objeto "rows" a leitura de parte do arquivo
# print(rows)#Imprime as linhas selecionadas
# 
# #Abrindo um dataset em colunas
# f = open("arquivos/salarios.csv","r")#Abre o arquivo em modo de leitura 'r'
# data = f.read()#Atribui ao objeto "data" a leitura do arquivo
# rows = data.split('\n')#Atribui ao objeto  "rows" a leitura de parte do arquivo
# full_data = [] # Criando uma lista vazia
# 
# for row in rows:#Loop para percorrer as linhas
#   split_row = row.split(",")#Aplicando o splite em cada linha pelo caracter ","
#   full_data.append(split_row)#Acrescenta as linhas no objeto "full_data"
# print(full_data)#Imprime as linhas selecionadas
# 
# #Contagem de linhas em um arquivo
# f = open("arquivos/salarios.csv","r")#Abre o arquivo em modo de leitura 'r'
# data = f.read()#Atribui ao objeto "data" a leitura do arquivo
# rows = data.split('\n')#Atribui ao objeto "rows" a leitura de parte do arquivo
# full_data = [] # Criando uma lista vazia
# 
# for row in rows:#Loop para percorrer as linhas
#   split_row = row.split(",")#Aplicando o splite em cada linha pelo caracter ","
#   full_data.append(split_row)#Acrescenta no objeto "full_data"
# 
# count= 0 #Contador para cada linha
# for row in full_data:#Loop para percorrer as linhas
#   count +=1 #Incremento do contador
# print(count)#Imprime a quantidade de linhas do arquivo
# 
# #Contagem de colunas em um arquivo
# f = open("arquivos/salarios.csv","r")#Abre o arquivo em modo de leitura 'r'
# data = f.read()#Atribui ao objeto "data" a leitura do arquivo
# rows = data.split('\n')#Atribui ao objeto "rows" a leitura de parte do arquivo
# full_data = [] # Criando uma lista vazia
# 
# for row in rows:#Loop para percorrer as linhas
#   split_row = row.split(",")#Aplicando o splite em cada linha pelo caracter ","
#   full_data.append(split_row)#Acrescenta no objeto "full_data"
#   first_row = full_data[0] #Contando linha por linha
#   count= 0 #Contador para cada linha
# 
# for column in first_row:#Loop para percorrer as colunas
#   count +=1 #Incremento do contador
# print(count)#Imprime a quantidade de linhas do arquivo
# 
# #Gravando arquivo pelo Jupyter Notebook
# %%wrtirefile arquivos/teste.txt
# Conteudo do arquivo aqui
# arq2 = open("arquivos/teste.txt","r")#Abre o arquivo em modo de leitura 'r'
# arq2.read()#Ler o arquivo
# arq2.seek(0)#Retornando ao inicio do arquivo
# arq2.readlines()#Leitura do arquivo linha a linha 
# #Usando um loop para ler o arquivo
# for line in open("arquivos/teste.txt"):
#   print(line)
# 
# #Importando um dataset com Pandas(pacote para leitura de dados - excel)
# import pandas as pd
# file_name = "arquivos/binary.csv"#Carregando o arquivo
# df = pd.read_csv(file_name)#Ler o arquivo
# df.head()#Imprime apenas as primeiras linhas, head
# file2 = "arquivos/salarios.csv"#Carregando o arquivo
# df2 = pd.read_csv(file2)#Ler o arquivo
# df2.head()#Imprime apenas as primeiras linhas, head